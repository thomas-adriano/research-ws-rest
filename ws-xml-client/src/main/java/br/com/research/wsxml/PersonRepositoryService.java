package br.com.research.wsxml;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "PersonRepositoryService", targetNamespace = "http://wsxml.research.com.br/",
                  wsdlLocation = "http://localhost:8080/ws-xml-tomcat-1.0/services/PersonRepository?wsdl")
public class PersonRepositoryService
        extends Service {

    private final static URL PERSONREPOSITORYSERVICE_WSDL_LOCATION;
    private final static WebServiceException PERSONREPOSITORYSERVICE_EXCEPTION;
    private final static QName PERSONREPOSITORYSERVICE_QNAME = new QName("http://wsxml.research.com.br/",
                                                                         "PersonRepositoryService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/ws-xml-tomcat-1.0/services/PersonRepository?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PERSONREPOSITORYSERVICE_WSDL_LOCATION = url;
        PERSONREPOSITORYSERVICE_EXCEPTION = e;
    }

    public PersonRepositoryService() {
        super(__getWsdlLocation(), PERSONREPOSITORYSERVICE_QNAME);
    }

    public PersonRepositoryService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PERSONREPOSITORYSERVICE_QNAME, features);
    }

    public PersonRepositoryService(URL wsdlLocation) {
        super(wsdlLocation, PERSONREPOSITORYSERVICE_QNAME);
    }

    public PersonRepositoryService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PERSONREPOSITORYSERVICE_QNAME, features);
    }

    public PersonRepositoryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PersonRepositoryService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns PersonRepository
     */
    @WebEndpoint(name = "PersonRepositoryPort")
    public PersonRepository getPersonRepositoryPort() {
        return super.getPort(new QName("http://wsxml.research.com.br/", "PersonRepositoryPort"),
                             PersonRepository.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns PersonRepository
     */
    @WebEndpoint(name = "PersonRepositoryPort")
    public PersonRepository getPersonRepositoryPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://wsxml.research.com.br/", "PersonRepositoryPort"), PersonRepository.class,
                             features);
    }

    private static URL __getWsdlLocation() {
        if (PERSONREPOSITORYSERVICE_EXCEPTION != null) {
            throw PERSONREPOSITORYSERVICE_EXCEPTION;
        }
        return PERSONREPOSITORYSERVICE_WSDL_LOCATION;
    }

}
